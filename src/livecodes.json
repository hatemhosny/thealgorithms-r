{
  "title": "The Algorithms - R Playground",
  "description": "",
  "tags": [],
  "activeEditor": "script",
  "markup": {
    "language": "html",
    "content": "<h1>\r\n  <a id=\"title-link\" href=\".\"\r\n    >The Algorithms Playground - <span id=\"language\">R</span></a\r\n  >\r\n</h1>\r\n<p class=\"languages\">\r\n  Switch to:\r\n  <a href=\"https://hatemhosny.github.io/thealgorithms-javascript/\"\r\n    >JavaScript</a\r\n  >\r\n  -\r\n  <a href=\"https://hatemhosny.github.io/thealgorithms-javascript/?lang=ts\"\r\n    >TypeScript</a\r\n  >\r\n  -\r\n  <a href=\"https://hatemhosny.github.io/thealgorithms-python/\"\r\n    >Python</a\r\n  >\r\n</p>\r\n<p>\r\n  Algorithm:\r\n  <select id=\"algorithm-select\"></select>\r\n</p>\r\n<p>(<a target=\"_blank\" id=\"source-link\">Source</a>)</p>\r\n<div id=\"container\" style=\"height: 80vh\"></div>\r\n\r\n<div id=\"footer\">\r\n  <p>\r\n    This page was built in\r\n    <a href=\"https://livecodes.io/\" target=\"_blank\">LiveCodes</a>\r\n    and\r\n    <a href=\"https://livecodes.io/docs/features/deploy\" target=\"_blank\"\r\n      >deployed</a\r\n    >\r\n    to GitHub Pages.\r\n  </p>\r\n  <p>\r\n    <a\r\n      href=\"https://livecodes.io/?activeEditor=script&x=https://github.com/hatemhosny/thealgorithms-r/tree/gh-pages/src\"\r\n      target=\"_blank\"\r\n      >Edit in LiveCodes</a\r\n    >\r\n    -\r\n    <a\r\n      href=\"https://github.com/hatemhosny/thealgorithms-r/\"\r\n      target=\"_blank\"\r\n      >View on GitHub</a\r\n    >\r\n  </p>\r\n</div>\r\n\r\n<script>\r\n  const algorithms = [\r\n    \"association_algorithms/apriori\",\r\n    \"classification_algorithms/decision_tree\",\r\n    \"classification_algorithms/gradient_boosting_algorithms\",\r\n    \"classification_algorithms/knn\",\r\n    \"classification_algorithms/lasso\",\r\n    \"classification_algorithms/light_gbm\",\r\n    \"classification_algorithms/naive_bayes\",\r\n    \"classification_algorithms/random_forest\",\r\n    \"classification_algorithms/svm\",\r\n    \"classification_algorithms/xgboost\",\r\n    \"clustering_algorithms/dbscan_clustering\",\r\n    \"clustering_algorithms/gmm\",\r\n    \"clustering_algorithms/heirarchical_clustering\",\r\n    \"clustering_algorithms/k_means\",\r\n    \"clustering_algorithms/kmeans_clustering\",\r\n    \"clustering_algorithms/kmeans_raw_r\",\r\n    \"clustering_algorithms/pam\",\r\n    \"data_manipulation/label_encode\",\r\n    \"data_manipulation/one_hot_encode\",\r\n    \"data_preprocessing/data_normalization_standardization\",\r\n    \"data_preprocessing/data_processing\",\r\n    \"data_preprocessing/dimensionality_reduction_algorithms\",\r\n    \"data_preprocessing/k_folds\",\r\n    \"data_preprocessing/lasso\",\r\n    \"mathematics/amicable_numbers\",\r\n    \"mathematics/armstrong_number\",\r\n    \"mathematics/bisection_method\",\r\n    \"mathematics/euclidean_distance\",\r\n    \"mathematics/factorial\",\r\n    \"mathematics/fibonacci\",\r\n    \"mathematics/first_n_fibonacci\",\r\n    \"mathematics/hamming_distance\",\r\n    \"mathematics/josephus_problem\",\r\n    \"mathematics/perfect_number\",\r\n    \"mathematics/perfect_square\",\r\n    \"mathematics/pi_monte_carlo\",\r\n    \"mathematics/prime\",\r\n    \"regression_algorithms/ann\",\r\n    \"regression_algorithms/gradient_boosting_algorithms\",\r\n    \"regression_algorithms/knn\",\r\n    \"regression_algorithms/light_gbm\",\r\n    \"regression_algorithms/linear_regression\",\r\n    \"regression_algorithms/linearregressionrawr\",\r\n    \"regression_algorithms/logistic_regression\",\r\n    \"regression_algorithms/logistic_regression_2\",\r\n    \"regression_algorithms/multiple_linear_regression\",\r\n    \"sorting_algorithms/bubble_sort\",\r\n    \"sorting_algorithms/comb_sort\",\r\n    \"sorting_algorithms/counting_sort\",\r\n    \"sorting_algorithms/heap_sort\",\r\n    \"sorting_algorithms/insertion_sort\",\r\n    \"sorting_algorithms/merge_sort\",\r\n    \"sorting_algorithms/quick_sort\",\r\n    \"sorting_algorithms/radix_sort\",\r\n    \"sorting_algorithms/selection_sort\",\r\n    \"sorting_algorithms/stooge_sort\"\r\n  ];\r\n\r\n  const params = new URLSearchParams(window.location.search);\r\n  window.lang = {\r\n    name: \"r\",\r\n    title: \"R\",\r\n    ext: \"r\",\r\n    repo: \"https://github.com/TheAlgorithms/R\",\r\n    algorithms,\r\n    defaultAlgorithm: \"sorting_algorithms/bubble_sort\",\r\n  };\r\n\r\n  window.algorithmSelect = document.getElementById(\"algorithm-select\");\r\n  document.getElementById(\"source-link\").href = window.lang.repo;\r\n  document.getElementById(\"language\").innerText = window.lang.title;\r\n\r\n  algorithms.forEach((algorithm) => {\r\n    const option = document.createElement(\"option\");\r\n    option.value = algorithm;\r\n    option.innerText = algorithm;\r\n    option.id = algorithm;\r\n    algorithmSelect.appendChild(option);\r\n  });\r\n\r\n  const selected =\r\n    (params.get(\"algorithm\") &&\r\n      algorithms.find((algorithm) => algorithm === params.get(\"algorithm\"))) ||\r\n    window.lang.defaultAlgorithm;\r\n  document.getElementById(selected).selected = true;\r\n</script>\r\n"
  },
  "style": {
    "language": "css",
    "content": "body {\r\n  font-family: sans-serif;\r\n  text-align: center;\r\n}\r\nh1 {\r\n  font-size: 1.5em;\r\n  text-align: left;\r\n  margin-left: 1rem;\r\n}\r\na {\r\n  text-decoration: none;\r\n  color: royalblue;\r\n}\r\nh1 a {\r\n  color: unset;\r\n}\r\nh1 a:hover {\r\n  text-decoration: underline;\r\n}\r\n.languages {\r\n  text-align: left;\r\n  margin-left: 1rem;\r\n}\r\n#container {\r\n  height: 90vh;\r\n}\r\n#footer {\r\n  font-size: 0.8em;\r\n}"
  },
  "script": {
    "language": "javascript",
    "content": "import { createPlayground } from \"https://unpkg.com/livecodes@0.2.0/livecodes.js\";\r\n\r\nlet playground;\r\n\r\nconst getContent = async (url) => {\r\n  const pathname = new URL(url).pathname.slice(1);\r\n  const [user, repo, _type, branch, ...path] = pathname.split(\"/\");\r\n  const [name, _extension] = path[path.length - 1].split(\".\");\r\n  const scriptUrl = `https://raw.githubusercontent.com/${user}/${repo}/${branch}/${path.join(\r\n    \"/\",\r\n  )}`;\r\n  const script = await fetch(scriptUrl).then(async (res) =>\r\n    editCode(await res.text()),\r\n  );\r\n  return { script, name };\r\n};\r\n\r\nconst editCode = (code) => code.replace(/# Example:\\n# /g, '# Example:\\n' );\r\n\r\nconst loadAlgorithm = async () => {\r\n  const algorithm = window.algorithmSelect.value;\r\n  const algorithmUrl = `${window.lang.repo}/blob/master/${algorithm}.${window.lang.ext}`;\r\n  if (playground) {\r\n    history.pushState(\r\n      {},\r\n      \"\",\r\n      `${location.origin}${location.pathname}?algorithm=${algorithm}`,\r\n    );\r\n  }\r\n  const { script, name } = await getContent(algorithmUrl);\r\n\r\n  const config = {\r\n    title: name,\r\n    languages: [window.lang.name],\r\n    script: {\r\n      language: window.lang.name,\r\n      content: script,\r\n    },\r\n    tools: {\r\n      enabled: [\"console\"],\r\n      active: \"console\",\r\n      status: \"open\",\r\n    },\r\n  };\r\n\r\n  if (!playground) {\r\n    playground = await createPlayground(\"#container\", {\r\n      appUrl: \"https://v14.livecodes.io/\",\r\n      config,\r\n    });\r\n  } else {\r\n    playground.setConfig(config);\r\n  }\r\n};\r\n\r\nwindow.algorithmSelect.addEventListener(\"change\", loadAlgorithm);\r\nloadAlgorithm();\r\n"
  },
  "stylesheets": [],
  "scripts": [],
  "cssPreset": "",
  "processors": [],
  "customSettings": {},
  "imports": {},
  "types": {},
  "tests": {
    "language": "typescript",
    "content": ""
  },
  "version": "14"
}